
input{
  background: lightgrey;
}


ul {
  list-style: none;
  padding-left: 0;
}

li {
  list-style: none;
}


/*🍚 many input label vertical align  : input옆 타이틀글자길이에 따라서 input위치가 양옆으로 들쭉날쭉하는거 정렬해줌 */
label {
  display: inline-block;
  width: 150px;
}

/* ??!! span의 좁은 블럭 설정 바꾸기
  
  block: div : 한줄 전체를 차지함
  inline: span: 한칸만 차지. padding등 스타일을 넣어도 영향안받음
  inline-block: 한칸만 차지. 스타일 영향받음 good
  
  span{
    display: inline-block;
  } */


/* 🍀 table : 🚀 table -center align */
/* 🍉 w1 */
table {
  margin: 0 auto; /* center the table horizontally */
}

/* 🍉 w2 */
table {
  width: 100%;
  /* border-collapse: collapse; */
  /* border-spacing: 0; */
}

th,
td {
  text-align: center;
  vertical-align: middle;

  /*   width: 20%;
    text-align: right; */
}

textarea {
  /*  Align label to match top of textarea */
  vertical-align: top;
}


/* 🍀scrollbar style */
  /* width */
  ::-webkit-scrollbar {
    width: 20px;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px grey; 
    border-radius: 10px;
  }
  
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: red; 
    border-radius: 10px;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #b30000; 
  }

/*🍀Universal tags - class */

/* 🦄grid - sasss */

/* 
@keyframes fadeIn {
  0% {
    transform: scale(1.5);
    opacity: 0;
  }
}

@include grid(31rem);

 */



/* 🦄grid 1 -me */
/* html :  
    <form id="parent">
        <div class="formLine left grid-a">
    </form>
  */

#parent {
  display: grid;

  grid-template-areas:
    "a b"
    "c d"
    ". e"
    ". f";

  /* 
    🍀grid : 아무 알파벳 넣고, 설정안해도 그대로 그리드 만들어짐 
      grid-template-areas:
      "o p q  "
      "s t a  "
      "u v c  "
      "w x e ";
    */

  gap: 2.5%;

  /*🍀grid: img 가운데 정렬 in the container */
  justify-items: center;
  align-items: center;
}

.grid-a {
  grid-area: a;
}
.grid-b {
  grid-area: b;
}
.grid-c {
  grid-area: c;
}

/* 🦄grid 2 : grid-template-columns  */
.grid{
  display: grid;
  grid-template-areas: 
  'header'
  'main'
  'footer';  
  grid-template-columns: 1fr;
  grid-template-rows: 5rem 1fr 5rem;      /* 🍚 1fr : 다른 grid가 차지하고 남은 공간 차지 */

  grid-gap: 20px 5px;
}


/* 🦄grid 3 : grid-template-columns  */
.grid{
  display: grid;
  /* 1fr을 4번반복 */
  grid-template-columns: repeat(4,1fr);
  /* grid-template-columns: repeat(4,25%); */
  grid-gap: 20px 5px;
}

/* 🦄grid 4 */
/*
  columns 16칸 (line으로 따지면 1~17)
  row 6칸 (line으로 따지면 1~7)만듬
  */
.parent {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(16, 1fr);
  grid-template-rows: repeat(6, 6rem);
  grid-row-gap: 4rem;
}

/* column line 7~11, row line 2~6 영역을차지함*/
.about-us-img-wrapper {
  grid-column: 7 / 11;
  grid-row: 2 / 6;
  width: 100%;
}

.service:nth-child(1) {
  grid-column: 4 / 7;
  grid-row: 1 / 3;
}

/* 🍀myBtn, button  
  btn-generator 보기좋게 정리한 것 
  https://www.bestcssbuttongenerator.com/#/13
  */

.myBtn {
  box-shadow: 0px 1px 0px 0px #f0f7fa;
  background: linear-gradient(to bottom, lightseagreen 5%, green 100%);
  background-color: lightseagreen;
  color: #ffffff;
  
  border-radius: 6px;
  border: 1px solid green;
  display: inline-block;
  cursor: pointer;
  font-family: Arial;
  font-size: 15px;
  font-weight: bold;
  padding: 6px 24px;
  text-decoration: none;
  text-shadow: 0px -1px 0px #5b6178;
}
/* hover-focus-active순서로 하면 에러 안남 */
.myBtn:hover {
  background: linear-gradient(to bottom, green 5%, lightseagreen 100%);
  background-color: green;
}
.myBtn:active {
  position: relative;
  top: 1px;
}

/* btn-generator - 각 버튼별로 다른 CSS 넣을때...필수기능만 간추린것 */

.btn_me {
  background: linear-gradient(to bottom, #33bdef 5%, #019ad2 100%);
  width: 4rem;

  border-radius: 0.5rem;
  box-shadow: 0px 1px 0px 0px #f0f7fa;
  cursor: pointer;
}
.btn_me:hover {
  background: linear-gradient(to bottom, #019ad2 5%, #33bdef 100%);
  background-color: #019ad2;
}

.btn_me:active {
  position: relative;
  top: 1px;
}

/*🍀transparent button  */
.myBtn-empty {
  background-color: transparent;
  background-repeat: no-repeat;
  border: none;
  cursor: pointer;
  overflow: hidden;
  outline: none;
}

/* 🍀 start coding - Navbar */

/* 🍀 keyframs */

/* <logo> */
.logo_container {
  position: relative;
}
.logo {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  top: -8rem;
}

.logo_empty {
  margin-top: 10rem;
}

.logo h1 {
  display: flex;
}

.logo h1 span {
  font-size: 2rem;

  font-weight: 900;
  color: var(--color-naver);
  text-transform: uppercase;
  margin: 0.5rem;
  border-radius: 50%;

  /*   */
}

/* T: keyframes */

.logo h1 span:nth-child(1) {
  animation: drop 30s 1s infinite;
}
.logo h1 span:nth-child(2) {
  animation: drop 30s 5s infinite;
}
.logo h1 span:nth-child(3) {
  animation: drop 30s 10s infinite;
}

@keyframes drop {
  0% {
    transform: translateY(0);
  }

  20% {
    transform: translatey(-50%);
  }

  100% {
    transform: translateY(0);
  }
}



/* 🍀~~~~~~~~~CSS main coding ~~~~ */




/* 🍀Bottom Utility class -(under the main style coding)-  */

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.display-none {
  display: none;
}

.display-block {
  display: block;
}

.img-small {
  width: 20%;
}

/* opacity:  0이면 완전 투명, 1이면 완전 불투명 */
.opacity {
  opacity: 1 !important;
}

.overflow {
  overflow: hidden;
}

.pointer-events {
  pointer-events: none;
  /* pointer-events: auto; */
}

.relative {
  position: relative;
}

.responsive {
  width: 100%;
  height: auto;
}

.transforming {
  transition: transform 0.5s;
}




/*👉r24 react에서의 animation적용 */
.slide-bottom {
  -webkit-animation: slide-bottom 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	animation: slide-bottom 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

@-webkit-keyframes slide-bottom {
  0% {
    -webkit-transform: translateY(-25%);
            transform: translateY(-25%);
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes slide-bottom {
  0% {
    -webkit-transform: translateY(-25%);
            transform: translateY(-25%);
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}
